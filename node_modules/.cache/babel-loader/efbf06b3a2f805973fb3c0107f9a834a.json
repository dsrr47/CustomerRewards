{"ast":null,"code":"var _jsxFileName = \"/Users/David/Desktop/CustomerRewards/src/components/Transactions.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport MonthlyTransactions from './MonthlyTransactions';\nexport default function Transactions({\n  transactions,\n  calculateAge,\n  calculateReward,\n  calculateTotalRewards\n}) {\n  const one = [];\n  const two = [];\n  const three = [];\n  const [ninetyDays] = useState(three);\n  const [sixtyDays] = useState(two);\n  const [thirtyDays] = useState(one);\n  const timePeriod = [[...thirtyDays], [...sixtyDays], [...ninetyDays]]; // Sort by month based on transaction.age\n\n  transactions.map(transaction => {\n    transaction.age = calculateAge(transaction.date);\n\n    if (transaction.age < 0) {\n      one.push(transaction);\n      one.sort((a, b) => a.age - b.age);\n      return one;\n    }\n\n    if (transaction.age === 0) {\n      two.push(transaction);\n      two.sort((a, b) => a.age - b.age);\n      return two;\n    }\n\n    if (transaction.age === 1) {\n      three.push(transaction);\n      three.sort((a, b) => a.age - b.age);\n      return three;\n    }\n  });\n  console.log(timePeriod);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, timePeriod.map(period => /*#__PURE__*/React.createElement(MonthlyTransactions, {\n    month: moment().format('MMMM'),\n    monthlyTransactions: period,\n    calculateReward: calculateReward,\n    calculateTotalRewards: calculateTotalRewards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  })))\n  /* {<div className='w-full'>\n    <MonthlyTransactions\n      month={moment().format('MMMM')}\n      monthlyTransactions={thirtyDays}\n      calculateReward={calculateReward}\n      calculateTotalRewards={calculateTotalRewards}\n    />\n    <MonthlyTransactions\n      month={moment().subtract(1, 'months').format('MMMM')}\n      monthlyTransactions={sixtyDays}\n      calculateReward={calculateReward}\n      calculateTotalRewards={calculateTotalRewards}\n    />\n    <MonthlyTransactions\n      month={moment().subtract(2, 'months').format('MMMM')}\n      monthlyTransactions={ninetyDays}\n      calculateReward={calculateReward}\n      calculateTotalRewards={calculateTotalRewards}\n    />\n  </div> }*/\n  ;\n}","map":{"version":3,"sources":["/Users/David/Desktop/CustomerRewards/src/components/Transactions.js"],"names":["React","useState","moment","MonthlyTransactions","Transactions","transactions","calculateAge","calculateReward","calculateTotalRewards","one","two","three","ninetyDays","sixtyDays","thirtyDays","timePeriod","map","transaction","age","date","push","sort","a","b","console","log","period","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,YADmC;AAEnCC,EAAAA,YAFmC;AAGnCC,EAAAA,eAHmC;AAInCC,EAAAA;AAJmC,CAAtB,EAKZ;AACD,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAM,CAACC,UAAD,IAAeX,QAAQ,CAACU,KAAD,CAA7B;AACA,QAAM,CAACE,SAAD,IAAcZ,QAAQ,CAACS,GAAD,CAA5B;AACA,QAAM,CAACI,UAAD,IAAeb,QAAQ,CAACQ,GAAD,CAA7B;AACA,QAAMM,UAAU,GAAG,CAAC,CAAC,GAAGD,UAAJ,CAAD,EAAkB,CAAC,GAAGD,SAAJ,CAAlB,EAAkC,CAAC,GAAGD,UAAJ,CAAlC,CAAnB,CAPC,CASD;;AACAP,EAAAA,YAAY,CAACW,GAAb,CAAkBC,WAAD,IAAiB;AAChCA,IAAAA,WAAW,CAACC,GAAZ,GAAkBZ,YAAY,CAACW,WAAW,CAACE,IAAb,CAA9B;;AAEA,QAAIF,WAAW,CAACC,GAAZ,GAAkB,CAAtB,EAAyB;AACvBT,MAAAA,GAAG,CAACW,IAAJ,CAASH,WAAT;AACAR,MAAAA,GAAG,CAACY,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,GAAF,GAAQK,CAAC,CAACL,GAA7B;AACA,aAAOT,GAAP;AACD;;AACD,QAAIQ,WAAW,CAACC,GAAZ,KAAoB,CAAxB,EAA2B;AACzBR,MAAAA,GAAG,CAACU,IAAJ,CAASH,WAAT;AACAP,MAAAA,GAAG,CAACW,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,GAAF,GAAQK,CAAC,CAACL,GAA7B;AACA,aAAOR,GAAP;AACD;;AACD,QAAIO,WAAW,CAACC,GAAZ,KAAoB,CAAxB,EAA2B;AACzBP,MAAAA,KAAK,CAACS,IAAN,CAAWH,WAAX;AACAN,MAAAA,KAAK,CAACU,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,GAAF,GAAQK,CAAC,CAACL,GAA/B;AACA,aAAOP,KAAP;AACD;AACF,GAlBD;AAoBAa,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,UAAU,CAACC,GAAX,CAAgBU,MAAM,iBACrB,oBAAC,mBAAD;AACE,IAAA,KAAK,EAAExB,MAAM,GAAGyB,MAAT,CAAgB,MAAhB,CADT;AAEE,IAAA,mBAAmB,EAAED,MAFvB;AAGE,IAAA,eAAe,EAAEnB,eAHnB;AAIE,IAAA,qBAAqB,EAAEC,qBAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAUA;;;;;;;;;;;;;;;;;;;;AAXF;AAgCD","sourcesContent":["import React, { useState } from 'react'\nimport moment from 'moment'\nimport MonthlyTransactions from './MonthlyTransactions'\n\nexport default function Transactions({\n  transactions,\n  calculateAge,\n  calculateReward,\n  calculateTotalRewards,\n}) {\n  const one = []\n  const two = []\n  const three = []\n  const [ninetyDays] = useState(three)\n  const [sixtyDays] = useState(two)\n  const [thirtyDays] = useState(one)\n  const timePeriod = [[...thirtyDays], [...sixtyDays], [...ninetyDays]]\n\n  // Sort by month based on transaction.age\n  transactions.map((transaction) => {\n    transaction.age = calculateAge(transaction.date)\n\n    if (transaction.age < 0) {\n      one.push(transaction)\n      one.sort((a, b) => a.age - b.age)\n      return one\n    }\n    if (transaction.age === 0) {\n      two.push(transaction)\n      two.sort((a, b) => a.age - b.age)\n      return two\n    }\n    if (transaction.age === 1) {\n      three.push(transaction)\n      three.sort((a, b) => a.age - b.age)\n      return three\n    }\n  })\n\n  console.log(timePeriod)\n\n  return (\n    <div className='w-full'>\n    {timePeriod.map( period => (\n      <MonthlyTransactions\n        month={moment().format('MMMM')}\n        monthlyTransactions={period}\n        calculateReward={calculateReward}\n        calculateTotalRewards={calculateTotalRewards}\n      />\n    ))}\n    </div>\n    /* {<div className='w-full'>\n      <MonthlyTransactions\n        month={moment().format('MMMM')}\n        monthlyTransactions={thirtyDays}\n        calculateReward={calculateReward}\n        calculateTotalRewards={calculateTotalRewards}\n      />\n      <MonthlyTransactions\n        month={moment().subtract(1, 'months').format('MMMM')}\n        monthlyTransactions={sixtyDays}\n        calculateReward={calculateReward}\n        calculateTotalRewards={calculateTotalRewards}\n      />\n      <MonthlyTransactions\n        month={moment().subtract(2, 'months').format('MMMM')}\n        monthlyTransactions={ninetyDays}\n        calculateReward={calculateReward}\n        calculateTotalRewards={calculateTotalRewards}\n      />\n    </div> }*/\n  )\n}\n"]},"metadata":{},"sourceType":"module"}